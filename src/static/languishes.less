/*@navbarHeight = 20;*/
@import "site/bootstrap/less/bootstrap";

html {
    background: @grayLighter;
}

body {
    background: @grayLighter;
    padding-top: @navbarHeight;

    font-size: 14px;
    line-height: 1.4em;
    font-family: "Helvetica Neue", "Helvetica", "Arial", "sans-serif";
}

/* Clip Visualization *********************************************************/
#clipvis {
    position: absolute;
    top: @navbarHeight;
    left: 0;
    height: 100%;
    width: 100%;
    margin-bottom: @navbarHeight;
    visibility: visible;
}

#spectrogram {
    position:absolute;
    top:0;
    left:0;
    height:100%;
    width:100%;
    visibility:visible;

    z-index:1;  /* Behind. */
}

#clipsvg {
    position:absolute;
    top:0;
    left:0;
    height:100%;
    width:100%;
    visibility:visible;

    z-index:10;
}

#waveform {
    fill: none;
    stroke: #000;
    stroke-width: 1;
    /*shape-rendering: crispEdges;*/

    visibility:visible;
    z-index:15;
    .opacity(40);
}

#selection {
    stroke: #F00;
    fill: #F00;
    z-index:20;
    .opacity(20);
}

#playmarker {
    stroke: #F33;
    stroke-width: 2;
    z-index:25;
    .opacity(100);
}

#clipvis .segment {
    fill: #DDD;
    stroke: #777;
    stroke-width: 2;

    z-index:30;
    .opacity(100);
}

/* When the segment is selected (usually by being clicked), highlight it. */
#clipvis .selected {
    fill: #D66;
}

.clipdisplay {
    fill: black;
    font-family: "Helvetica Neue", "Helvetica", "Arial", "sans-serif";
    font-size: 12;
    z-index: 31;
}

#clipsvg path {
    cursor: crosshair;
}

#clipsvg text {
    /* Dragging, unfortunately, causes this SVG text to be selected, which
     * looks pretty unsightly. This solution disables user text selection.
     * Via http://stackoverflow.com/q/826782. */
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/* The edit pane, over a selection or segment. Floating box for text entry. */
#clipvis #editpane {
    fill: white;
    z-index: 50;
    display: none;
}

/* Clip List View *************************************************************/
/* Based heavily on the Backbone Todo sample application's CSS. */

/* The overall container for the list of clips, floating at the page center. */
#cliplist-container {
    width: 480px;
    margin: 0 auto 40px;
    background-color: #f9f9f9;
    padding: 20px;
    .box-shadow(0 5px 6px rgba(0, 0, 0, 0.2));
}

/* The single ul element, containing all the clips as li items. */
#cliplist-container ul#cliplist {
    list-style: none;
    margin:0px;
    padding:0px;
}

/* Each li item within the ul element. */
#cliplist-container ul#cliplist li {
    padding: 10px 15px 10px 0;
    position: relative;
    font-size: 20px;
    /* Draw a thin grey border at the bottom of each item. */
    border-bottom: 1px solid #cccccc;
    *zoom: 1;
}

/* When hovering over an li item, shade the background. */
#cliplist li:hover {
    background-color: #eee;
}

/* Display links in the item plainly, and in black. */
.clipdisplay a {
    text-decoration: none;
    color: #000;
    outline: none;
    z-index: 2;
}

/* Make visited item links display as dark purple. */
#cliplist li a:visited {
    color: #660066;
}

/* But while hovering, change *all* the links to blue. */
#cliplist li:hover a {
    color: #33D;
}

/* While editing, hide the regular clip item display. */
#cliplist .editing .clipdisplay {
    display: none;
}

/* By default (when not editing) hide the text input box. */
#cliplist .clipedit {
    display: none;
}

/* But while editing, show the input box. */
#cliplist .editing .clipedit {
    display: block;
}

/* The input box for an item being edited. */
#cliplist .editing input {
    width: 440px;  /* 480 - 20 - 20 */
    display: block;
    line-height: 1.4em;
    border: 0;
    outline: none;
    padding: 6px;
    border: 1px solid #999999;
    -moz-box-shadow: rgba(0, 0, 0, 0.2) 0 1px 2px 0 inset;
    -webkit-box-shadow: rgba(0, 0, 0, 0.2) 0 1px 2px 0 inset;
    -o-box-shadow: rgba(0, 0, 0, 0.2) 0 1px 2px 0 inset;
    box-shadow: rgba(0, 0, 0, 0.2) 0 1px 2px 0 inset;
}
